import {HButton} from "hbutton.slint";
import {StartMenu,NewMenu} from "menus.slint";
import {Status} from "status.slint";

component MainMenu {
    StartMenu {visible: Status.nowtab == 1;}
    NewMenu {visible: Status.nowtab == 2;}
}
export component AppWindow inherits Window {
    title: "Project Manager";
    width: 300px;
    height: 400px;

    icon: @image-url("icon.png");

    // 是否按下了鼠标
    property <bool> drag-area-pressed: false;
    // 记录按下的位置
    property <length> drag-area-down-x: 0;
    property <length> drag-area-down-y: 0;

    // 调用Rust代码移动窗口
    callback move-window(length, length);

    no-frame: true;
    //拖拽区域
    TouchArea {
        
        border := Rectangle {
            x:0px;
            y:0px; 
            width: 300px;
            height: 40px;
            background: red;
            //关闭窗口
            Rectangle {
                width: 40px;
                height: border.height;
                icon:=Text {text: "X";font-size: 40px;color: white;}
                background: touchexit.has-hover ? #cc0e15 : red;
                x:border.width - self.width;
                touchexit:=TouchArea{
                    clicked => {
                        Functions.close-window();
                    }
                }
            }
            Rectangle {
                width: 40px;
                height: border.height;
                Text {text: "<";font-size: 40px;color: white;}
                background: touchback.has-hover ? #cc0e15 : red;
                x:0;
                touchback:=TouchArea{
                    clicked => {
                        Status.nowtab = Status.lasttab;
                    }
                }
            }
            Rectangle {
                width: 40px;
                height: border.height;
                Image {source: @image-url("home.png");}
                background: touchhome.has-hover ? #cc0e15 : red;
                x:40px;
                touchhome:=TouchArea{
                    clicked => {
                        Status.nowtab = 1;
                    }
                }
            }
        }   

        Rectangle {
            border-color: black;
            border-width: 2px;
            x:0px;
            
        }

        MainMenu {x:150px;y:0px;}
    
            moved => {
                //根据移动的偏移量，设置窗口位置
                move-window(self.mouse-x - drag-area-down-x, self.mouse-y - drag-area-down-y);
            }
            pointer-event(ev) => {
                drag-area-pressed = ev.kind == PointerEventKind.down;
                drag-area-down-x = self.mouse-x;
                drag-area-down-y = self.mouse-y;
            }
        }

}
export global Functions {
    pure callback close_window();
    pure callback total_projects_num() -> int;
}

